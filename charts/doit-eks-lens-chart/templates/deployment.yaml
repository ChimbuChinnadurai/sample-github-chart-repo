apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mychart.fullname" . }}-kube-state-metrics
  labels:
    app.kubernetes.io/component: exporter
    k8s-app: kube-state-metrics
  {{- include "mychart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.kubeStateMetrics.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
    {{- include "mychart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: kube-state-metrics
      {{- include "mychart.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: true
      containers:
      - args: {{- toYaml .Values.kubeStateMetrics.kubeStateMetrics.args | nindent 8 }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.kubeStateMetrics.kubeStateMetrics.image.repository }}:{{ .Values.kubeStateMetrics.kubeStateMetrics.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.kubeStateMetrics.kubeStateMetrics.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 80
          name: http-metrics
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
        resources: {}
      restartPolicy: Always
      serviceAccount: doit-kube-state-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mychart.fullname" . }}-collector
  labels:
    doit.com/metrics-deployment-id: sc2U1kKZT6d5tA4VQ3DW
    k8s-app: opentelemetry-collector
  {{- include "mychart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.collector.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: doit-collector
    {{- include "mychart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: metrics
        app.kubernetes.io/name: doit-collector
        doit.com/metrics-deployment-id: sc2U1kKZT6d5tA4VQ3DW
      {{- include "mychart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args: {{- toYaml .Values.collector.otelcol.args | nindent 8 }}
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.collector.otelcol.image.repository }}:{{ .Values.collector.otelcol.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.collector.otelcol.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 13133
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: otelcol
        ports:
        - containerPort: 8888
          hostPort: 8888
          name: metrics
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /conf
          name: doit-collector-config
          readOnly: true
      restartPolicy: Always
      serviceAccount: doit-collector
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: collector.yaml
            path: collector.yaml
          name: {{ include "mychart.fullname" . }}-doit-collector-config
        name: doit-collector-config